{"version":3,"sources":["components/Reviews.js"],"names":["Reviews","state","results","movieId","this","props","match","params","fetchReviews","then","data","setState","catch","err","console","log","map","oneResult","author","content","id","Component"],"mappings":"kNAGMA,E,4MACJC,MAAQ,CACNC,QAAS,I,uDAGX,WAAqB,IAAD,OACVC,EAAYC,KAAKC,MAAMC,MAAMC,OAA7BJ,QACRK,YAAaL,GACVM,MAAK,SAAAC,GACJ,EAAKC,SAAL,eAAmBD,OAEpBE,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,Q,oBAG9B,WACE,OACE,6BACGT,KAAKH,MAAMC,QAAQc,KAAI,SAAAC,GAAS,OAC/B,+BACE,yCAAYA,EAAUC,UACtB,4BAAID,EAAUE,YAFPF,EAAUG,a,GAlBPC,aA4BPrB","file":"static/js/Reviews.d957b4d4.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { fetchReviews } from '../services/todos-api';\r\n\r\nclass Reviews extends Component {\r\n  state = {\r\n    results: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { movieId } = this.props.match.params;\r\n    fetchReviews(movieId)\r\n      .then(data => {\r\n        this.setState({ ...data });\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ul>\r\n        {this.state.results.map(oneResult => (\r\n          <li key={oneResult.id}>\r\n            <p>Author: {oneResult.author}</p>\r\n            <p>{oneResult.content}</p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Reviews;\r\n"],"sourceRoot":""}